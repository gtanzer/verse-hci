[WitnessFunction(nameof(Semantics.Append), 0)]
        public DisjunctiveExamplesSpec WitnessPrefix(GrammarRule rule, ExampleSpec spec) {
            var result = new Dictionary<State, IEnumerable<object>>();

            foreach (var example in spec.Examples) {
                State inputState = example.Key;
                var output = example.Value as string;
                var substrings = new List<string>();
                for (int i = 1; i <= output.Length-1; ++i) {
                    substrings.Add(output.Substring(0, i));
                }
                result[inputState] = substrings.Cast<object>();
            }
            return new DisjunctiveExamplesSpec(result);
        }

        [WitnessFunction(nameof(Semantics.Append), 1, DependsOnParameters = new []{0})]
        public ExampleSpec WitnessSuffix(GrammarRule rule, ExampleSpec spec, ExampleSpec prefixSpec) {
            var result = new Dictionary<State, object>();
            foreach (var example in spec.Examples) {
                State inputState = example.Key;
                var output = example.Value as string;
                var prefix = (string) prefixSpec.Examples[inputState];
                result[inputState] = output.Substring(prefix.Length);
            }
            return new ExampleSpec(result);
        }